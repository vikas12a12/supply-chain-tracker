import streamlit as st
import hashlib
import time
import json

# ------------------------
# Blockchain Core
# ------------------------
class Block:
    def _init_(self, index, timestamp, data, previous_hash):
        self.index = index
        self.timestamp = timestamp
        self.data = data
        self.previous_hash = previous_hash
        self.hash = self.calculate_hash()

    def calculate_hash(self):
        block_string = f"{self.index}{self.timestamp}{json.dumps(self.data)}{self.previous_hash}"
        return hashlib.sha256(block_string.encode()).hexdigest()


class Blockchain:
    def _init_(self):
        self.chain = [self.create_genesis_block()]

    def create_genesis_block(self):
        return Block(0, time.time(), {"role": "Genesis Block"}, "0")

    def get_latest_block(self):
        return self.chain[-1]

    def add_block(self, data):
        new_block = Block(
            len(self.chain),
            time.time(),
            data,
            self.get_latest_block().hash
        )
        self.chain.append(new_block)

    def get_chain(self):
        return self.chain


# ------------------------
# Streamlit UI
# ------------------------
st.set_page_config(page_title="Blockchain Supply Chain Tracker", layout="wide")

if "blockchain" not in st.session_state:
    st.session_state.blockchain = Blockchain()

st.title("ðŸ“¦ Blockchain-based Supply Chain Tracker")

# Sidebar roles
st.sidebar.header("Add Supply Chain Step")
role = st.sidebar.selectbox(
    "Select Role", 
    ["Farmer", "Wholesaler", "Distributor", "Retailer", "Customer"]
)
product_id = st.sidebar.text_input("Product ID")
description = st.sidebar.text_area("Description (e.g., batch details, location, status)")
add_button = st.sidebar.button("Add Transaction")

if add_button and product_id.strip() != "":
    st.session_state.blockchain.add_block({
        "role": role,
        "product_id": product_id,
        "description": description,
    })
    st.sidebar.success("âœ… Transaction added to blockchain!")

# Display Blockchain
st.subheader("ðŸ”— Blockchain Ledger")
for block in st.session_state.blockchain.get_chain():
    with st.expan
